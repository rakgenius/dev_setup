Objects are organized as

Kind - Pod, Service, Deployment, Persistenvolumes
Group - core,apps,storage
version - v1, beta,alpha


Api groups

core api (legacy) 
 - (http://APISERVER:APISERVERPORT/api/$VERSION/$RESOURCE_TYPE)
 - for namespace (http://APISERVER:APISERVERPORT/api/$VERSION/$RESOURCE_TYPE/namespaces/$NAMESPACE/$RESOURCE_TYPE/$RESOURCE_NAME)


named api
- http://APISERVER:APISERVERPORT/api/$GROUPNAME/$VERSION/$RESOURCE_TYPE
- http://APISERVER:APISERVERPORT/api/$GROUPNAME/$VERSION/namespaces/$NAMESPACE/$RESOURCE_TYPE/$RESOURCE_NAME



Response code
200 - success
400 - client error
500 -server error


core api
- pod
- node
- namespace
- persistent volume
- persistent volume claim


named api

apps - deployment
storage.k8s.io - StorageClass
rbac.authorization.k8s.io - Role


Api is versioned. Enables forward change

Alpha -> Beta -> Stable

No direct relation to release versions

Any http client which follows the api can send request to kubernetes server and not only kubectl

Each resource has a resourceVersion



Organizing objects
- annotations, labels and namespaces


Not all objects belongs to namespaces for eg: persistent volumes, nodes


Namespaces


default, kube-system, kube-public

Namespace must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character





